% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metagenomeSeq.R
\name{run_metagenomeseq}
\alias{run_metagenomeseq}
\title{Run MetagenomeSeq Analysis}
\usage{
run_metagenomeseq(
  se,
  variable,
  mod = NULL,
  coef = 2,
  B = 1,
  szero = FALSE,
  spos = FALSE
)
}
\arguments{
\item{se}{A SummarizedExperiment object containing normalized gene/pathway
abundance values.}

\item{variable}{A character string specifying the name of the variable of
interest to include in the model, matching the desired column name of the
sample metadata.}

\item{mod}{An optional model matrix for the count distribution. If NULL,
model matrix will be created using the provided variable.}

\item{coef}{An integer specifying the coefficient of interest to grab log
fold-changes. Default is 2.}

\item{B}{An integer specifying the number of bootstraps to perform for the
fit. Default is 1.}

\item{szero}{A logical value indicating whether to shrink zero component
parameters. Default is FALSE.}

\item{spos}{A logical value indicating whether to shrink positive component
parameters. Default is FALSE.}
}
\value{
A data frame (tibble) containing the results of the MetagenomeSeq
analysis.
}
\description{
MetagenomeSeq is designed to determine features (such as Operational
Taxanomic Unit (OTU), species, genes, etc.) that are differentially abundant
between two or more groups of multiple samples
(https://www.cbcb.umd.edu/software/metagenomeSeq). It address the effects of
both normalization and under-sampling of microbial communities on disease
association detection and the testing of feature correlations. For this
function, features consist on the abundance of gene families or metabolic
pathways of multiple samples, obtained using HUMAnN3
(https://huttenhower.sph.harvard.edu/humann).
}
\details{
The function takes a SummarizedExperiment object containing gene/ pathway
abundance values as the assay and metadata as the column data, as well as
several parameter options to run the analysis, using a zero-inflated
Log-Normal mixture model for each feature (\code{fitFeatureModel()}).It converts
the SummarizedExperiment object to a metagenomeSeq object, checks if the
count data is normalized, and if not, calculates the normalization statistics
to apply cumulative sum scaling normalization. It constructs a model matrix,
fits the model to the data and returns the results of the analysis as a data
frame (tibble).
}
\examples{
# Read HUMAnN3 & MetagenomeSeq Analysis
set.seed(123)
da_result <- read_humann(
 file_path = system.file("extdata", "All_genefam_rpk_kegg.tsv", package = "microfunk"),
 metadata = system.file("extdata", "ex_meta.csv", package = "microfunk") ) \%>\%
 run_metagenomeseq(variable = "ARM")

 # Test name of features returned
 f <- c(
   "K03300", "K00863", "K19130", "K16951", "K07488", "K00135", "K06015",
   "K05522", "K07776", "K06196"
 )

 da_result \%>\%
   dplyr::pull(function_id) \%>\%
   testthat::expect_equal(f)

 # Test p-values
 da_result \%>\%
   dplyr::pull(adjPvalues) \%>\%
   mean() \%>\%
   round(3) \%>\%
   testthat::expect_equal(0.109)

# Read HUMAnN3 & MetagenomeSeq Analysis
da_result <- read_humann(
  file_path = system.file("extdata", "All_genefam_cpm_kegg.tsv", package = "microfunk"),
  metadata = system.file("extdata", "ex_meta.csv", package = "microfunk")
 ) \%>\% run_metagenomeseq(variable = "ARM")

da_result
}
